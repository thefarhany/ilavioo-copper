generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id             Int                   @id @default(autoincrement())
  name           String                @db.VarChar(255)
  slug           String                @unique @db.VarChar(255)
  description    String?
  details        String?
  notes          String?
  createdAt      DateTime              @default(now()) @map("created_at")
  updatedAt      DateTime              @updatedAt @map("updated_at")
  highlights     ProductHighlight[]
  images         ProductImage[]
  specifications ProductSpecification?

  @@map("products")
}

model ProductHighlight {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  icon      String? @db.VarChar(100)
  text      String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_highlights")
}

model ProductSpecification {
  id        Int     @id @default(autoincrement())
  productId Int     @unique @map("product_id")
  size      String? @db.VarChar(100)
  finishing String? @db.VarChar(100)
  material  String? @db.VarChar(150)
  price     String? @db.VarChar(100)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_specifications")
}

model ProductImage {
  id         Int     @id @default(autoincrement())
  productId  Int     @map("product_id")
  imageUrl   String  @map("image_url")
  isFeatured Boolean @default(false) @map("is_featured")
  isCatalog  Boolean @default(false) @map("is_catalog")
  product    Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_images")
}
